<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary title="Dictionary">
	<suite name="Standard Suite" code="core" description="Common classes and commands for all applications.">
		<cocoa name="NSCoreSuite"/>
		<enumeration name="save options" code="savo">
			<enumerator name="yes" code="yes " description="Save the file."/>
			<enumerator name="no" code="no  " description="Do not save the file."/>
			<enumerator name="ask" code="ask " description="Ask the user whether or not to save the file."/>
		</enumeration>
		<enumeration name="printing error handling" code="enum">
			<enumerator name="standard" code="lwst" description="Standard PostScript error handling">
				<cocoa boolean-value="NO"/>
			</enumerator>
			<enumerator name="detailed" code="lwdt" description="print a detailed report of PostScript errors">
				<cocoa boolean-value="YES"/>
			</enumerator>
		</enumeration>
		<record-type name="print settings" code="pset">
			<property name="copies" code="lwcp" description="the number of copies of a document to be printed" type="integer">
				<cocoa key="NSCopies"/>
			</property>
			<property name="collating" code="lwcl" description="Should printed copies be collated?" type="boolean">
				<cocoa key="NSMustCollate"/>
			</property>
			<property name="starting page" code="lwfp" description="the first page of the document to be printed" type="integer">
				<cocoa key="NSFirstPage"/>
			</property>
			<property name="ending page" code="lwlp" description="the last page of the document to be printed" type="integer">
				<cocoa key="NSLastPage"/>
			</property>
			<property name="pages across" code="lwla" description="number of logical pages laid across a physical page" type="integer">
				<cocoa key="NSPagesAcross"/>
			</property>
			<property name="pages down" code="lwld" description="number of logical pages laid out down a physical page" type="integer">
				<cocoa key="NSPagesDown"/>
			</property>
			<property name="requested print time" code="lwqt" description="the time at which the desktop printer should print the document" type="date">
				<cocoa key="NSPrintTime"/>
			</property>
			<property name="error handling" code="lweh" description="how errors are handled" type="printing error handling">
				<cocoa key="NSDetailedErrorReporting"/>
			</property>
			<property name="fax number" code="faxn" description="for fax number" type="text">
				<cocoa key="NSFaxNumber"/>
			</property>
			<property name="target printer" code="trpr" description="for target printer" type="text">
				<cocoa key="NSPrinterName"/>
			</property>
		</record-type>
		<class name="application" code="capp" description="The application&apos;s top-level scripting object.">
			<cocoa class="NSApplication"/>
			<element type="document">
				<cocoa key="orderedDocuments"/>
			</element>
			<element type="window" access="r">
				<cocoa key="orderedWindows"/>
			</element>
			<property name="name" code="pnam" description="The name of the application." type="text" access="r"/>
			<property name="frontmost" code="pisf" description="Is this the active application?" type="boolean" access="r">
				<cocoa key="isActive"/>
			</property>
			<property name="version" code="vers" description="The version number of the application." type="text" access="r"/>
			<responds-to command="open">
				<cocoa method="handleOpenScriptCommand:"/>
			</responds-to>
			<responds-to command="print">
				<cocoa method="handlePrintScriptCommand:"/>
			</responds-to>
			<responds-to command="quit">
				<cocoa method="handleQuitScriptCommand:"/>
			</responds-to>
		</class>
		<class name="document" code="docu" description="A document.">
			<cocoa class="MyDocument"/>
			<property name="name" code="pnam" description="Its name." type="text" access="r">
				<cocoa key="displayName"/>
			</property>
			<property name="modified" code="imod" description="Has it been modified since the last save?" type="boolean" access="r">
				<cocoa key="isDocumentEdited"/>
			</property>
			<property name="file" code="file" description="Its location on disk, if it has one." type="file" access="r">
				<cocoa key="fileURL"/>
			</property>
			<responds-to command="close">
				<cocoa method="handleCloseScriptCommand:"/>
			</responds-to>
			<responds-to command="print">
				<cocoa method="handlePrintScriptCommand:"/>
			</responds-to>
			<responds-to command="save">
				<cocoa method="handleSaveScriptCommand:"/>
			</responds-to>
		</class>
		<class name="window" code="cwin" description="A window.">
			<cocoa class="NSWindow"/>
			<property name="name" code="pnam" description="The title of the window." type="text" access="r">
				<cocoa key="title"/>
			</property>
			<property name="id" code="ID  " description="The unique identifier of the window." type="integer" access="r">
				<cocoa key="uniqueID"/>
			</property>
			<property name="index" code="pidx" description="The index of the window, ordered front to back." type="integer">
				<cocoa key="orderedIndex"/>
			</property>
			<property name="bounds" code="pbnd" description="The bounding rectangle of the window." type="rectangle">
				<cocoa key="boundsAsQDRect"/>
			</property>
			<property name="closeable" code="hclb" description="Does the window have a close button?" type="boolean" access="r">
				<cocoa key="hasCloseBox"/>
			</property>
			<property name="miniaturizable" code="ismn" description="Does the window have a minimize button?" type="boolean" access="r">
				<cocoa key="isMiniaturizable"/>
			</property>
			<property name="miniaturized" code="pmnd" description="Is the window minimized right now?" type="boolean">
				<cocoa key="isMiniaturized"/>
			</property>
			<property name="resizable" code="prsz" description="Can the window be resized?" type="boolean" access="r">
				<cocoa key="isResizable"/>
			</property>
			<property name="visible" code="pvis" description="Is the window visible right now?" type="boolean">
				<cocoa key="isVisible"/>
			</property>
			<property name="zoomable" code="iszm" description="Does the window have a zoom button?" type="boolean" access="r">
				<cocoa key="isZoomable"/>
			</property>
			<property name="zoomed" code="pzum" description="Is the window zoomed right now?" type="boolean">
				<cocoa key="isZoomed"/>
			</property>
			<property name="document" code="docu" description="The document whose contents are displayed in the window." type="document" access="r"/>
			<responds-to command="close">
				<cocoa method="handleCloseScriptCommand:"/>
			</responds-to>
			<responds-to command="print">
				<cocoa method="handlePrintScriptCommand:"/>
			</responds-to>
			<responds-to command="save">
				<cocoa method="handleSaveScriptCommand:"/>
			</responds-to>
		</class>
		<command name="open" code="aevtodoc" description="Open a document.">
			<direct-parameter description="The file(s) to be opened.">
				<type type="file"/>
				<type type="file" list="yes"/>
			</direct-parameter>
			<result description="The opened document(s).">
				<type type="document"/>
				<type type="document" list="yes"/>
			</result>
		</command>
		<command name="close" code="coreclos" description="Close a document.">
			<cocoa class="NSCloseCommand"/>
			<direct-parameter description="the document(s) or window(s) to close." type="specifier"/>
			<parameter name="saving" code="savo" description="Should changes be saved before closing?" type="save options" optional="yes">
				<cocoa key="SaveOptions"/>
			</parameter>
			<parameter name="saving in" code="kfil" description="The file in which to save the document, if so." type="file" optional="yes">
				<cocoa key="File"/>
			</parameter>
		</command>
		<command name="save" code="coresave" description="Save a document.">
			<direct-parameter description="The document(s) or window(s) to save." type="specifier"/>
			<parameter name="in" code="kfil" description="The file in which to save the document." type="file" optional="yes">
				<cocoa key="File"/>
			</parameter>
			<parameter name="as" code="fltp" description="The file format to use." type="saveable file format" optional="yes">
				<cocoa key="FileType"/>
			</parameter>
		</command>
		<command name="print" code="aevtpdoc" description="Print a document.">
			<direct-parameter description="The file(s), document(s), or window(s) to be printed.">
				<type type="file" list="yes"/>
				<type type="specifier"/>
			</direct-parameter>
			<parameter name="with properties" code="prdt" description="The print settings to use." type="print settings" optional="yes">
				<cocoa key="PrintSettings"/>
			</parameter>
			<parameter name="print dialog" code="pdlg" description="Should the application show the print dialog?" type="boolean" optional="yes">
				<cocoa key="ShowPrintDialog"/>
			</parameter>
		</command>
		<command name="quit" code="aevtquit" description="Quit the application.">
			<cocoa class="NSQuitCommand"/>
			<parameter name="saving" code="savo" description="Should changes be saved before quitting?" type="save options" optional="yes">
				<cocoa key="SaveOptions"/>
			</parameter>
		</command>
		<command name="count" code="corecnte" description="Return the number of elements of a particular class within an object.">
			<cocoa class="NSCountCommand"/>
			<direct-parameter description="The objects to be counted." type="specifier"/>
			<parameter hidden="yes" name="each" code="kocl" description="The class of objects to be counted." type="type" optional="yes">
				<cocoa key="ObjectClass"/>
			</parameter>
			<result description="The count." type="integer"/>
		</command>
		<command name="delete" code="coredelo" description="Delete an object.">
			<cocoa class="NSDeleteCommand"/>
			<direct-parameter description="The object(s) to delete." type="specifier"/>
		</command>
		<command name="duplicate" code="coreclon" description="Copy an object.">
			<cocoa class="NSCloneCommand"/>
			<direct-parameter description="The object(s) to copy." type="specifier"/>
			<parameter name="to" code="insh" description="The location for the new copy or copies." type="location specifier" optional="yes">
				<cocoa key="ToLocation"/>
			</parameter>
			<parameter name="with properties" code="prdt" description="Properties to set in the new copy or copies right away." type="record" optional="yes">
				<cocoa key="WithProperties"/>
			</parameter>
		</command>
		<command name="exists" code="coredoex" description="Verify that an object exists.">
			<cocoa class="NSExistsCommand"/>
			<direct-parameter description="The object(s) to check." type="any"/>
			<result description="Did the object(s) exist?" type="boolean"/>
		</command>
		<command name="make" code="corecrel" description="Create a new object.">
			<cocoa class="NSCreateCommand"/>
			<parameter name="new" code="kocl" description="The class of the new object." type="type">
				<cocoa key="ObjectClass"/>
			</parameter>
			<parameter name="at" code="insh" description="The location at which to insert the object." type="location specifier" optional="yes">
				<cocoa key="Location"/>
			</parameter>
			<parameter name="with data" code="data" description="The initial contents of the object." type="any" optional="yes">
				<cocoa key="ObjectData"/>
			</parameter>
			<parameter name="with properties" code="prdt" description="The initial values for properties of the object." type="record" optional="yes">
				<cocoa key="KeyDictionary"/>
			</parameter>
			<result description="The new object." type="specifier"/>
		</command>
		<command name="move" code="coremove" description="Move an object to a new location.">
			<cocoa class="NSMoveCommand"/>
			<direct-parameter description="The object(s) to move." type="specifier"/>
			<parameter name="to" code="insh" description="The new location for the object(s)." type="location specifier">
				<cocoa key="ToLocation"/>
			</parameter>
		</command>
	</suite>
	<suite name="Symmetries" code="esRR" description="Classes for the Symmetries application.">
		<cocoa name="Symmetries"/>
		<enumeration name="saveable file format" code="savf">
			<enumerator name="Symmetries" code="esRR" description="Symmetries data file">
				<cocoa string-value="net.earthlingsoft.symmetries.document"/>
			</enumerator>
			<enumerator name="PDF" code="PDF " description="Portable Document Format">
				<cocoa string-value="com.adobe.pdf"/>
			</enumerator>
		</enumeration>
		<class-extension description="A Symmetries document." extends="document">
			<cocoa class="MyDocument"/>
			<property name="symmetry" code="sym#" description="the number of corners / degree of symmetry [2 through 37]" type="integer" access="rw">
				<cocoa key="cornerCount"/>
			</property>
			<property name="size" code="size" description="the shape’s size [between 0 and 1]" type="real" access="rw"/>
			<property name="corner fraction" code="cfrc" description="distance of the mid point from the centre [between -√2 and √2]" type="real"/>
			<property name="mid points distance" code="mPds" description="the distance between the mid points (if two mid points is true) [between -1 and 1]" type="real"/>
			<property name="start point handle length" code="stL " description="the length of the handle attached to the start point [between 0 and 1]" type="real" access="rw">
				<cocoa key="straightTangentLength"/>
			</property>
			<property name="start point handle direction" code="stD " description="the direction of the handle attached to the start point [between 0 and 2π]" type="real" access="rw">
				<cocoa key="straightTangentDirection"/>
			</property>
			<property name="mid point handle length" code="dTL " description="the length of the handle attached to the mid point [between 0 and 1]" type="real" access="rw">
				<cocoa key="diagonalTangentLength"/>
			</property>
			<property name="mid point handle direction" code="dtD " description="the direction of the handle attached to the mid point [between 0 and 2π]" type="real" access="rw">
				<cocoa key="diagonalTangentDirection"/>
			</property>
			<property name="thickness" code="thck" description="the thickness of the shape [between 0 and 1]" type="real" access="rw"/>
			<property name="corner thickness" code="thkC" description="the two strokes don’t need to be perfectly parallel, the mid point corners can be thickened with this setting [between -1 and 1]" type="real" access="rw">
				<cocoa key="thickenedCorner"/>
			</property>
			<property name="two mid points" code="2MPt" description="true if two points are used to determine the middle of the path segment" type="boolean" access="rw">
				<cocoa key="twoMidPoints"/>
			</property>
			<property name="two strokes" code="2Lin" description="true if two strokes are drawn and the area between strokes is filled" type="boolean" access="rw">
				<cocoa key="twoLines"/>
			</property>
			<property name="stroke width" code="strT" description="width of the stroke used [between 0 and 1]" type="real" access="rw">
				<cocoa key="strokeThickness"/>
			</property>
			<responds-to command="stop animation">
				<cocoa method="stopAnimation:"/>
			</responds-to>
			<responds-to command="animate">
				<cocoa method="animate:"/>
			</responds-to>
		</class-extension>
		<command name="stop animation" code="esRR!ani" description="stops randomly animating the document">
			<cocoa class="NSScriptCommand"/>
			<direct-parameter description="the document to stop animating" type="document"/>
		</command>
		<command name="animate" code="esRRanim" description="begins randomly animating the document">
			<direct-parameter description="the document to animate" type="document"/>
		</command>
	</suite>
</dictionary>